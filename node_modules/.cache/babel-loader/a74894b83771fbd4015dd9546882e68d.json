{"ast":null,"code":"/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n(function () {\n  'use strict';\n  /**\r\n   * Class constructor for Button MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\n\n  var MaterialButton = function MaterialButton(element) {\n    this.element_ = element; // Initialize instance.\n\n    this.init();\n  };\n\n  window['MaterialButton'] = MaterialButton;\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\n\n  MaterialButton.prototype.Constant_ = {// None for now.\n  };\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\n\n  MaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n  };\n  /**\r\n   * Handle blur of element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\n\n  MaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n      this.element_.blur();\n    }\n  }; // Public methods.\n\n  /**\r\n   * Disable button.\r\n   *\r\n   * @public\r\n   */\n\n\n  MaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n  };\n\n  MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n  /**\r\n   * Enable button.\r\n   *\r\n   * @public\r\n   */\n\n  MaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n  };\n\n  MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n  /**\r\n   * Initialize element.\r\n   */\n\n  MaterialButton.prototype.init = function () {\n    if (this.element_) {\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleElement_ = document.createElement('span');\n        this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(this.rippleElement_);\n        this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n        this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n        this.element_.appendChild(rippleContainer);\n      }\n\n      this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n      this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n      this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n  }; // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n\n\n  componentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n  });\n})();","map":{"version":3,"sources":["E:/workout-buddy/node_modules/material-design-lite/src/button/button.js"],"names":["MaterialButton","element","element_","init","window","prototype","Constant_","CssClasses_","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler_","event","blur","disable","disabled","enable","classList","contains","rippleContainer","document","createElement","add","rippleElement_","appendChild","boundRippleBlurHandler","bind","addEventListener","boundButtonBlurHandler","componentHandler","register","constructor","classAsString","cssClass","widget"],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright 2015 Google Inc. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *      http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n(function() {\r\n  'use strict';\r\n\r\n  /**\r\n   * Class constructor for Button MDL component.\r\n   * Implements MDL component design pattern defined at:\r\n   * https://github.com/jasonmayes/mdl-component-design-pattern\r\n   *\r\n   * @param {HTMLElement} element The element that will be upgraded.\r\n   */\r\n  var MaterialButton = function MaterialButton(element) {\r\n    this.element_ = element;\r\n\r\n    // Initialize instance.\r\n    this.init();\r\n  };\r\n  window['MaterialButton'] = MaterialButton;\r\n\r\n  /**\r\n   * Store constants in one place so they can be updated easily.\r\n   *\r\n   * @enum {string | number}\r\n   * @private\r\n   */\r\n  MaterialButton.prototype.Constant_ = {\r\n    // None for now.\r\n  };\r\n\r\n  /**\r\n   * Store strings for class names defined by this component that are used in\r\n   * JavaScript. This allows us to simply change it in one place should we\r\n   * decide to modify at a later date.\r\n   *\r\n   * @enum {string}\r\n   * @private\r\n   */\r\n  MaterialButton.prototype.CssClasses_ = {\r\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\r\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\r\n    RIPPLE: 'mdl-ripple'\r\n  };\r\n\r\n  /**\r\n   * Handle blur of element.\r\n   *\r\n   * @param {Event} event The event that fired.\r\n   * @private\r\n   */\r\n  MaterialButton.prototype.blurHandler_ = function(event) {\r\n    if (event) {\r\n      this.element_.blur();\r\n    }\r\n  };\r\n\r\n  // Public methods.\r\n\r\n  /**\r\n   * Disable button.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialButton.prototype.disable = function() {\r\n    this.element_.disabled = true;\r\n  };\r\n  MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\r\n\r\n  /**\r\n   * Enable button.\r\n   *\r\n   * @public\r\n   */\r\n  MaterialButton.prototype.enable = function() {\r\n    this.element_.disabled = false;\r\n  };\r\n  MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\r\n\r\n  /**\r\n   * Initialize element.\r\n   */\r\n  MaterialButton.prototype.init = function() {\r\n    if (this.element_) {\r\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\r\n        var rippleContainer = document.createElement('span');\r\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\r\n        this.rippleElement_ = document.createElement('span');\r\n        this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\r\n        rippleContainer.appendChild(this.rippleElement_);\r\n        this.boundRippleBlurHandler = this.blurHandler_.bind(this);\r\n        this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\r\n        this.element_.appendChild(rippleContainer);\r\n      }\r\n      this.boundButtonBlurHandler = this.blurHandler_.bind(this);\r\n      this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\r\n      this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\r\n    }\r\n  };\r\n\r\n  // The component registers itself. It can assume componentHandler is available\r\n  // in the global scope.\r\n  componentHandler.register({\r\n    constructor: MaterialButton,\r\n    classAsString: 'MaterialButton',\r\n    cssClass: 'mdl-js-button',\r\n    widget: true\r\n  });\r\n})();\r\n"]},"metadata":{},"sourceType":"script"}